server.port=8081
spring.r2dbc.url=r2dbc:pool:postgres://localhost:5432/WebfluxSecurity
spring.r2dbc.username=postgres
spring.r2dbc.password=user

spring.flyway.url=jdbc:postgresql://localhost:5432/WebfluxSecurity
spring.flyway.user=postgres
spring.flyway.password=user
spring.flyway.locations=classpath:db/migration

jwt.password.encoder.secret=FZK2DZ82odqS13e8aENggaMbb_fAkl-nJL4AEVBX43g
jwt.password.encoder.keyLength=64
jwt.password.encoder.iteration=256

jwt.secret=b2hsb4dsh3dbshbdjsj5qojmqsmqs6qqskdmskdm1spqps3
jwt.expiration=3600
jwt.issuer=proselyte

spring.main.allow-circular-references=true

spring.application.name=api-gateway
eureka.client.service-url.defaultzone=http://localhost:8761/eureka

logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=info
logging.level.org.springframework.cloud.gateway=TRACE
##logging for request by my apiGateway

##product-service
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product/**
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/product/(?<segment>.*), /$\{segment}


##inventory-service
spring.cloud.gateway.routes[1].id=inventory-service
spring.cloud.gateway.routes[1].uri=lb://inventory-service
##lb:// --> this is loadBalancing
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/inventory/**
#spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/order/(?<segment>.*), /$\{segment}

##order-service
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
##lb:// --> this is loadBalancing
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**