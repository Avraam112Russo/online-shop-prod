spring.data.mongodb.uri=mongodb+srv://user:user@cluster0.4q2fza4.mongodb.net/online-shop?retryWrites=true&w=majority
server.port=0

#eureka server
spring.application.name=inventory-service
eureka.client.service-url.defaultzone=http://localhost:8761/eureka
##kafka broker
spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=productBalance:com.russozaripov.inventoryservice.DTO.Supply_product_DTO



spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.russozaripov.inventoryservice.event.DTO.RequestOrderDTO
spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.enable-auto-commit=true
